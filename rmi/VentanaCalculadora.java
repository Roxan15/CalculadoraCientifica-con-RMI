import java.text.DecimalFormat;
import java.rmi.Naming;
import java.rmi.RemoteException;
import java.rmi.NotBoundException;

import java.net.MalformedURLException;
import java.awt.event.ActionEvent;
import java.lang.ArithmeticException;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.InputMismatchException;

/**
 *
 * @author Roxana
 */

public class VentanaCalculadora extends javax.swing.JFrame {
    private double contenido;
    private double num1, num2, result;

    private int num3;
    private BigInteger result2;

    private BigDecimal contenidoGrande;
    private BigDecimal num4,num5, result3;

    private static String resultadoFinal;

    private boolean sumaState;
    private boolean restaState;
    private boolean multiplicacionState;
    private boolean divisionState;
    private boolean alaraizxState;
    private boolean alapotenciaxState;

    private String url1;
    private String url2;

    private static IOperacion opera1;    
    private static IOpeCientifica opera2;

    /**
     * Creates new form VentanaCalculadora
     */
    public VentanaCalculadora() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        fondo = new javax.swing.JPanel();
        contenidoCuentas = new javax.swing.JTextField();
        tipoDato = new javax.swing.JComboBox<>();
        borrarUnDigito = new javax.swing.JButton();
        raizCuadrada = new javax.swing.JButton();
        raizCubica = new javax.swing.JButton();
        raizN = new javax.swing.JButton();
        cosecante = new javax.swing.JButton();
        secante = new javax.swing.JButton();
        cotangente = new javax.swing.JButton();
        xAlCubo = new javax.swing.JButton();
        euler = new javax.swing.JButton();
        coseno = new javax.swing.JButton();
        seno = new javax.swing.JButton();
        tangente = new javax.swing.JButton();
        logaritmoBase10 = new javax.swing.JButton();
        logaritmoNatural = new javax.swing.JButton();
        unoSobreX = new javax.swing.JButton();
        valorAbsoluto = new javax.swing.JButton();
        factorial = new javax.swing.JButton();
        pi = new javax.swing.JButton();
        xAlCuadrado = new javax.swing.JButton();
        ocho = new javax.swing.JButton();
        nueve = new javax.swing.JButton();
        division = new javax.swing.JButton();
        resultado = new javax.swing.JButton();
        borrarTodo = new javax.swing.JButton();
        multiplicacion = new javax.swing.JButton();
        resta = new javax.swing.JButton();
        suma = new javax.swing.JButton();
        punto = new javax.swing.JButton();
        tres = new javax.swing.JButton();
        seis = new javax.swing.JButton();
        cinco = new javax.swing.JButton();
        cero = new javax.swing.JButton();
        dos = new javax.swing.JButton();
        uno = new javax.swing.JButton();
        negativoPositivo = new javax.swing.JButton();
        cuatro = new javax.swing.JButton();
        siete = new javax.swing.JButton();
        alExponenteX = new javax.swing.JButton();
        diezAlaX = new javax.swing.JButton();
        dosAlaX = new javax.swing.JButton();
        eulerAlaX = new javax.swing.JButton();
        refresh = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        fondo.setBackground(new java.awt.Color(204, 204, 255));

        contenidoCuentas.setEditable(false);
        contenidoCuentas.setBackground(new java.awt.Color(255, 255, 255));
        contenidoCuentas.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        contenidoCuentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contenidoCuentasActionPerformed(evt);
            }
        });

        tipoDato.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "GRAD", "RAD", "DEG" }));

        borrarUnDigito.setText("DEL");
        borrarUnDigito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarUnDigitoActionPerformed(evt);
            }
        });

        raizCuadrada.setText("\u221Ax");
        raizCuadrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    raizCuadradaActionPerformed(evt);
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }
        });

        raizCubica.setText("\u221Bx");
        raizCubica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    raizCubicaActionPerformed(evt);
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }
        });

        raizN.setText("\u02B8\u221Ax");
        raizN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    raizNActionPerformed(evt);
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }
        });

        cosecante.setText("csc");
        cosecante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    cosecanteActionPerformed(evt);
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }
        });

        refresh.setText("\u2b6f");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    refreshActionPerformed(evt);
                } catch (MalformedURLException | RemoteException | NotBoundException e) {
                    e.printStackTrace();
                }
            }

            private void refreshActionPerformed(ActionEvent evt) throws MalformedURLException, RemoteException, NotBoundException {
                opera1 = null;
                opera2 =null;
                url1 = "";
                url2 = "";
                inicializarInstancias();
            }
        });

        secante.setText("sec");
        secante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    secanteActionPerformed(evt);
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }
        });

        cotangente.setText("cot");
        cotangente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    cotangenteActionPerformed(evt);
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }
        });

        xAlCubo.setText("X\u00B3");
        xAlCubo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    xAlCuboActionPerformed(evt);
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }
        });

        euler.setText("e");
        euler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    eulerActionPerformed(evt);
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }
        });

        coseno.setText("cos");
        coseno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    cosenoActionPerformed(evt);
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }
        });

        seno.setText("sin");
        seno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    senoActionPerformed(evt);
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }
        });

        tangente.setText("tan");
        tangente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    tangenteActionPerformed(evt);
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }
        });

        logaritmoBase10.setText("log");
        logaritmoBase10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    logaritmoBase10ActionPerformed(evt);
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }
        });

        logaritmoNatural.setText("ln");
        logaritmoNatural.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    logaritmoNaturalActionPerformed(evt);
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }
        });

        unoSobreX.setText("\u215F x");
        unoSobreX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    unoSobreXActionPerformed(evt);
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }
        });

        valorAbsoluto.setText("lxl");
        valorAbsoluto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    valorAbsolutoActionPerformed(evt);
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }
        });

        factorial.setText("n!");
        factorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    factorialActionPerformed(evt);
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }
        });

        pi.setText("\u03C0");
        pi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    piActionPerformed(evt);
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }
        });

        xAlCuadrado.setText("X\u00B2");
        xAlCuadrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    xAlCuadradoActionPerformed(evt);
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }
        });

        ocho.setText("8");
        ocho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ochoActionPerformed(evt);
            }
        });

        nueve.setText("9");
        nueve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nueveActionPerformed(evt);
            }
        });

        division.setText("\u00F7");
        division.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    divisionActionPerformed(evt);
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }
        });

        resultado.setText("=");
        resultado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    resultadoActionPerformed(evt);
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }
        });

        borrarTodo.setText("AC");
        borrarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarTodoActionPerformed(evt);
            }
        });

        multiplicacion.setText("\u2715");
        multiplicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    multiplicacionActionPerformed(evt);
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }
        });

        resta.setText("\u2212");
        resta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    restaActionPerformed(evt);
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }
        });

        suma.setText("\u002B");
        suma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    sumaActionPerformed(evt);
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }
        });

        punto.setText(".");
        punto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                puntoActionPerformed(evt);
            }
        });

        tres.setText("3");
        tres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tresActionPerformed(evt);
            }
        });

        seis.setText("6");
        seis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seisActionPerformed(evt);
            }
        });

        cinco.setText("5");
        cinco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cincoActionPerformed(evt);
            }
        });

        cero.setText("0");
        cero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ceroActionPerformed(evt);
            }
        });

        dos.setText("2");
        dos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dosActionPerformed(evt);
            }
        });

        uno.setText("1");
        uno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unoActionPerformed(evt);
            }
        });

        negativoPositivo.setText("+/-");
        negativoPositivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                negativoPositivoActionPerformed(evt);
            }
        });

        cuatro.setText("4");
        cuatro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuatroActionPerformed(evt);
            }
        });

        siete.setText("7");
        siete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sieteActionPerformed(evt);
            }
        });

        alExponenteX.setText("^");
        alExponenteX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    alExponenteXActionPerformed(evt);
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }
        });

        diezAlaX.setText("10\u02E3");
        diezAlaX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    diezAlaXActionPerformed(evt);
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }
        });

        dosAlaX.setText("2\u02E3");
        dosAlaX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    dosAlaXActionPerformed(evt);
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }
        });

        eulerAlaX.setText("e\u02E3");
        eulerAlaX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    eulerAlaXActionPerformed(evt);
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }
        });

        javax.swing.GroupLayout fondoLayout = new javax.swing.GroupLayout(fondo);
        fondo.setLayout(fondoLayout);
        fondoLayout.setHorizontalGroup(
                fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(fondoLayout.createSequentialGroup()
                                .addGap(0, 23, Short.MAX_VALUE)
                                .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(contenidoCuentas, javax.swing.GroupLayout.PREFERRED_SIZE, 424,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(fondoLayout
                                                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addGroup(fondoLayout.createSequentialGroup()
                                                        .addGroup(fondoLayout
                                                                .createParallelGroup(
                                                                        javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addGroup(fondoLayout.createSequentialGroup()
                                                                        .addGroup(fondoLayout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(alExponenteX,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                        60,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addComponent(diezAlaX,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                        60,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                        .addGroup(fondoLayout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(siete,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                        80,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addComponent(cuatro,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                        80,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                        .addGroup(fondoLayout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(ocho,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                        80,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addComponent(cinco,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                        80,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                        .addGroup(fondoLayout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(nueve,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                        80,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addComponent(seis,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                        80,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                        .addGroup(fondoLayout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(division,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                        60,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addComponent(multiplicacion,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                        60,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                                .addGroup(fondoLayout.createSequentialGroup()
                                                                        .addGroup(fondoLayout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(dosAlaX,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                        60,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addComponent(eulerAlaX,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                        60,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                        .addGroup(fondoLayout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(uno,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                        80,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addComponent(negativoPositivo,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                        80,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                        .addGroup(fondoLayout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(dos,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                        80,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addComponent(cero,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                        80,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                        .addGroup(fondoLayout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(tres,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                        80,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addComponent(punto,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                        80,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                        .addGroup(fondoLayout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(resta,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                        60,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addComponent(suma,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                        60,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                                .addGroup(fondoLayout.createSequentialGroup()
                                                                        .addGroup(fondoLayout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addGroup(fondoLayout
                                                                                        .createSequentialGroup()
                                                                                        .addComponent(xAlCuadrado,
                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                60,
                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                        .addGap(0, 0, 0)
                                                                                        .addComponent(pi,
                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                60,
                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                        .addGap(0, 0, 0)
                                                                                        .addComponent(factorial,
                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                60,
                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                                .addGroup(fondoLayout
                                                                                        .createSequentialGroup()
                                                                                        .addGroup(fondoLayout
                                                                                                .createParallelGroup(
                                                                                                        javax.swing.GroupLayout.Alignment.TRAILING)
                                                                                                .addComponent(xAlCubo,
                                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                        60,
                                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                .addComponent(
                                                                                                        raizCuadrada,
                                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                        60,
                                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                                        .addGap(0, 0, 0)
                                                                                        .addGroup(fondoLayout
                                                                                                .createParallelGroup(
                                                                                                        javax.swing.GroupLayout.Alignment.LEADING,
                                                                                                        false)
                                                                                                .addComponent(
                                                                                                        raizCubica,
                                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                        1,
                                                                                                        Short.MAX_VALUE)
                                                                                                .addComponent(euler,
                                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                        60,
                                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                                        .addGroup(fondoLayout
                                                                                                .createParallelGroup(
                                                                                                        javax.swing.GroupLayout.Alignment.LEADING)
                                                                                                .addComponent(coseno,
                                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                        60,
                                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                .addComponent(raizN,
                                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                        60,
                                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                                        .addGroup(fondoLayout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(cosecante,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                        60,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addGroup(fondoLayout
                                                                                        .createSequentialGroup()
                                                                                        .addGroup(fondoLayout
                                                                                                .createParallelGroup(
                                                                                                        javax.swing.GroupLayout.Alignment.LEADING)
                                                                                                .addComponent(seno,
                                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                        60,
                                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                .addComponent(
                                                                                                        valorAbsoluto,
                                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                        60,
                                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                                        .addGap(0, 0, 0)
                                                                                        .addGroup(fondoLayout
                                                                                                .createParallelGroup(
                                                                                                        javax.swing.GroupLayout.Alignment.LEADING)
                                                                                                .addComponent(tangente,
                                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                        60,
                                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                .addComponent(unoSobreX,
                                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                        60,
                                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
                                                                        fondoLayout.createSequentialGroup()
                                                                                .addComponent(secante,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                        60,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addGap(0, 0, 0)
                                                                                .addGroup(fondoLayout
                                                                                        .createParallelGroup(
                                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(logaritmoNatural,
                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                60,
                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(cotangente,
                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                60,
                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(logaritmoBase10,
                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                60,
                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                        .addGap(0, 0, 0)
                                                        .addGroup(fondoLayout
                                                                .createParallelGroup(
                                                                        javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(refresh,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE, 64,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(borrarTodo,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE, 64,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(resultado,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE, 64,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGroup(fondoLayout.createSequentialGroup()
                                                        .addComponent(tipoDato, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(
                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(borrarUnDigito,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE, 175,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap(38, Short.MAX_VALUE)));
        fondoLayout.setVerticalGroup(
                fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(fondoLayout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(contenidoCuentas, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(borrarUnDigito, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tipoDato, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(fondoLayout.createSequentialGroup()
                                                .addGroup(fondoLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(raizCuadrada,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE, 30,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(raizCubica,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE, 30,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(raizN, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(cosecante)
                                                        .addComponent(secante)
                                                        .addComponent(cotangente))
                                                .addGroup(fondoLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(xAlCubo)
                                                        .addComponent(euler)
                                                        .addGroup(fondoLayout
                                                                .createParallelGroup(
                                                                        javax.swing.GroupLayout.Alignment.BASELINE)
                                                                .addComponent(coseno)
                                                                .addComponent(seno)
                                                                .addComponent(tangente)
                                                                .addComponent(logaritmoBase10)))
                                                .addGap(1, 1, 1)
                                                .addGroup(fondoLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(xAlCuadrado)
                                                        .addComponent(pi)
                                                        .addComponent(factorial)
                                                        .addGroup(fondoLayout
                                                                .createParallelGroup(
                                                                        javax.swing.GroupLayout.Alignment.BASELINE)
                                                                .addComponent(valorAbsoluto)
                                                                .addComponent(unoSobreX)
                                                                .addComponent(logaritmoNatural)))
                                                .addGap(1, 1, 1)
                                                .addGroup(fondoLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(fondoLayout.createSequentialGroup()
                                                                .addComponent(alExponenteX)
                                                                .addGap(1, 1, 1)
                                                                .addComponent(diezAlaX))
                                                        .addGroup(fondoLayout.createSequentialGroup()
                                                                .addComponent(siete)
                                                                .addGap(1, 1, 1)
                                                                .addComponent(cuatro))
                                                        .addGroup(fondoLayout.createSequentialGroup()
                                                                .addComponent(ocho)
                                                                .addGap(1, 1, 1)
                                                                .addComponent(cinco))
                                                        .addGroup(fondoLayout.createSequentialGroup()
                                                                .addComponent(nueve)
                                                                .addGap(1, 1, 1)
                                                                .addGroup(fondoLayout.createParallelGroup(
                                                                        javax.swing.GroupLayout.Alignment.BASELINE)
                                                                        .addComponent(seis)
                                                                        .addComponent(multiplicacion))))
                                                .addGap(0, 0, 0)
                                                .addGroup(fondoLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(fondoLayout.createSequentialGroup()
                                                                .addComponent(dosAlaX)
                                                                .addGap(1, 1, 1)
                                                                .addComponent(eulerAlaX))
                                                        .addGroup(fondoLayout.createSequentialGroup()
                                                                .addComponent(uno)
                                                                .addGap(1, 1, 1)
                                                                .addComponent(negativoPositivo))
                                                        .addGroup(fondoLayout.createSequentialGroup()
                                                                .addComponent(dos)
                                                                .addGap(1, 1, 1)
                                                                .addComponent(cero))
                                                        .addGroup(fondoLayout.createSequentialGroup()
                                                                .addComponent(tres)
                                                                .addGap(1, 1, 1)
                                                                .addComponent(punto))
                                                        .addGroup(fondoLayout.createSequentialGroup()
                                                                .addComponent(resta)
                                                                .addGap(1, 1, 1)
                                                                .addComponent(suma))))
                                        .addGroup(fondoLayout.createSequentialGroup()
                                                .addComponent(refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(borrarTodo, javax.swing.GroupLayout.PREFERRED_SIZE, 60,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(fondoLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(division)
                                                        .addComponent(resultado, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                118, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap(26, Short.MAX_VALUE)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(fondo, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(fondo, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)));

        pack();
    }// </editor-fold>
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    private void contenidoCuentasActionPerformed(java.awt.event.ActionEvent evt) {
    }

    private void borrarUnDigitoActionPerformed(java.awt.event.ActionEvent evt) {
        String texto = contenidoCuentas.getText();
        if (!texto.isEmpty()) {
            texto = texto.substring(0, texto.length() - 1);
            contenidoCuentas.setText(texto);
        }
    }

    private void borrarTodoActionPerformed(java.awt.event.ActionEvent evt) {
        // Agregar texto al JTextField
        contenidoCuentas.setText("");
    }

    private void raizCuadradaActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {
        num1 = datoIntroducido();
        result = opera2.raizCuadrada(num1);
        resultadoFinal = datoMostrado(result);
        contenidoCuentas.setText("");
        agregarContenidoAPantalla(resultadoFinal);
    }

    private void raizCubicaActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {
        num1 = datoIntroducido();
        result = opera2.raizCubica(num1);
        resultadoFinal = datoMostrado(result);
        contenidoCuentas.setText("");
        agregarContenidoAPantalla(resultadoFinal);
    }

    private void cosecanteActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {
        num1 = datoGradRadDeg();
        result = opera2.cosecante(num1);
        resultadoFinal = datoMostrado(result);
        contenidoCuentas.setText("");
        agregarContenidoAPantalla(resultadoFinal);
    }

    private void secanteActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {
        num1 = datoGradRadDeg();
        result = opera2.secante(num1);
        resultadoFinal = datoMostrado(result);
        contenidoCuentas.setText("");
        agregarContenidoAPantalla(resultadoFinal);
    }

    private void cotangenteActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {
        num1 = datoGradRadDeg();
        result = opera2.cotang(num1);
        resultadoFinal = datoMostrado(result);
        contenidoCuentas.setText("");
        agregarContenidoAPantalla(resultadoFinal);
    }

    private void xAlCuboActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {
        num1 = datoIntroducido();
        result = opera2.alCubo(num1);
        resultadoFinal = datoMostrado(result);
        contenidoCuentas.setText("");
        agregarContenidoAPantalla(resultadoFinal);
    }

    private void eulerActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {
        double euler = opera2.euler();
        String numero = datoMostrado(euler);
        contenidoCuentas.setText(numero);
    }

    private void cosenoActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {
        num1 = datoGradRadDeg();
        result = opera2.coseno(num1);
        resultadoFinal = datoMostrado(result);
        contenidoCuentas.setText("");
        agregarContenidoAPantalla(resultadoFinal);
    }

    private void senoActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {
        num1 = datoGradRadDeg();
        result = opera2.seno(num1);
        resultadoFinal = datoMostrado(result);
        contenidoCuentas.setText("");
        agregarContenidoAPantalla(resultadoFinal);
    }

    private void tangenteActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {
        num1 = datoGradRadDeg();
        result = opera2.tang(num1);
        resultadoFinal = datoMostrado(result);
        contenidoCuentas.setText("");
        agregarContenidoAPantalla(resultadoFinal);
    }

    private void logaritmoBase10ActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {
        num1 = datoIntroducido();
        result = opera2.log(num1);
        resultadoFinal = datoMostrado(result);
        contenidoCuentas.setText("");
        agregarContenidoAPantalla(resultadoFinal);
    }

    private void logaritmoNaturalActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {
        num1 = datoIntroducido();
        result = opera2.ln(num1);
        resultadoFinal = datoMostrado(result);
        contenidoCuentas.setText("");
        agregarContenidoAPantalla(resultadoFinal);
    }

    private void unoSobreXActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {
        num4 = datoIntroducidoGrande();
        result3 = opera2.unoSobreX(num4);
        resultadoFinal = result3.toString();
        contenidoCuentas.setText("");
        agregarContenidoAPantalla(resultadoFinal);
    }

    private void valorAbsolutoActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {
        num4 = datoIntroducidoGrande();
        result3 = opera2.absoluto(num4);
        resultadoFinal = result3.toString();
        contenidoCuentas.setText("");
        agregarContenidoAPantalla(resultadoFinal);
    }

    private void factorialActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {
        num3 = (Integer.parseInt(contenidoCuentas.getText()));
        //result2 = opera2.factorial(num1);
        result2 =opera2.factorial(num3);
        resultadoFinal = result2.toString();
        contenidoCuentas.setText(resultadoFinal);
    }

    private void eulerAlaXActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {
        num1 = datoIntroducido();
        //result = opera2.eulerAlaX(num1);
        result = Math.exp(num1);
        resultadoFinal = datoMostrado(result);
        contenidoCuentas.setText("");
        agregarContenidoAPantalla(resultadoFinal);
    }

    private void piActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {
        double pi = opera2.pi();
        String numero = datoMostrado(pi);
        contenidoCuentas.setText(numero);

    }

    private void xAlCuadradoActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {
        num1 = datoIntroducido();
        result = opera2.alCuadrado(num1);
        resultadoFinal = datoMostrado(result);
        contenidoCuentas.setText("");
        agregarContenidoAPantalla(resultadoFinal);
    }

    private void negativoPositivoActionPerformed(java.awt.event.ActionEvent evt) {
        String textoActual = contenidoCuentas.getText();
        String negativo = "-";
        if (textoActual.contains("")) {
            String agregarNumero = negativo + textoActual;
            // Agregar texto al JTextField
            contenidoCuentas.setText(agregarNumero);
        }
        if (textoActual.contains("-")) {
            String valorPositivo = textoActual.replace("-", "+");
            // Agregar texto al JTextField
            contenidoCuentas.setText(valorPositivo);
        }
        if (textoActual.contains("+")) {
            String valorNegativo = textoActual.replace("+", "-");
            // Agregar texto al JTextField
            contenidoCuentas.setText(valorNegativo);
        }
    }

    private void sieteActionPerformed(java.awt.event.ActionEvent evt) {
        String numero = "7";
        agregarContenidoAPantalla(numero);
    }

    private void diezAlaXActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {
        num1 = datoIntroducido();
        result = opera2.diezAlaX(num1);
        resultadoFinal = datoMostrado(result);
        contenidoCuentas.setText("");
        agregarContenidoAPantalla(resultadoFinal);
    }

    private void dosAlaXActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {
        num1 = datoIntroducido();
        result = opera2.dosaAaX(num1);
        resultadoFinal = datoMostrado(result);
        contenidoCuentas.setText("");
        agregarContenidoAPantalla(resultadoFinal);
    }

    private void ochoActionPerformed(java.awt.event.ActionEvent evt) {
        String numero = "8";
        agregarContenidoAPantalla(numero);
    }

    private void nueveActionPerformed(java.awt.event.ActionEvent evt) {
        String numero = "9";
        agregarContenidoAPantalla(numero);
    }

    private void cuatroActionPerformed(java.awt.event.ActionEvent evt) {
        String numero = "4";
        agregarContenidoAPantalla(numero);
    }

    private void cincoActionPerformed(java.awt.event.ActionEvent evt) {
        String numero = "5";
        agregarContenidoAPantalla(numero);
    }

    private void seisActionPerformed(java.awt.event.ActionEvent evt) {
        String numero = "6";
        agregarContenidoAPantalla(numero);
    }

    private void unoActionPerformed(java.awt.event.ActionEvent evt) {
        String numero = "1";
        agregarContenidoAPantalla(numero);
    }

    private void dosActionPerformed(java.awt.event.ActionEvent evt) {
        String numero = "2";
        agregarContenidoAPantalla(numero);
    }

    private void tresActionPerformed(java.awt.event.ActionEvent evt) {
        String numero = "3";
        agregarContenidoAPantalla(numero);
    }

    private void ceroActionPerformed(java.awt.event.ActionEvent evt) {
        String numero = "0";
        agregarContenidoAPantalla(numero);
    }

    private void puntoActionPerformed(java.awt.event.ActionEvent evt) {
        String numero = ".";
        agregarContenidoAPantalla(numero);
    }

    private void raizNActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {
        num1 = datoIntroducido();
        contenidoCuentas.setText("");
        alaraizxState = true;

    }

    private void divisionActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {
        num4 = datoIntroducidoGrande();
        contenidoCuentas.setText("");
        divisionState = true;
    }

    private void multiplicacionActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {
        num4 = datoIntroducidoGrande();
        contenidoCuentas.setText("");
        multiplicacionState = true;
    }

    private void restaActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {
        num4 = datoIntroducidoGrande();
        contenidoCuentas.setText("");
        restaState = true;
    }

    private void sumaActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {
        num4 = datoIntroducidoGrande();
        contenidoCuentas.setText("");
        sumaState = true;
    }

    private void alExponenteXActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {
        num1 = datoIntroducido();
        contenidoCuentas.setText("");
        alapotenciaxState = true;
    }

    private void resultadoActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {
        num5 = datoIntroducidoGrande();
        num2 = datoIntroducido();
        if (sumaState == true) {
            //result3 = opera1.suma(num4, num5);
            result3 = opera1.suma(num4, num5);
        }
        else if (restaState == true) {
            result3 = opera1.resta(num4, num5);
        }
        else if (multiplicacionState == true) {
            result3 = opera1.multiplicacion(num4, num5);
        }
        else if (divisionState == true) {
            result3 = opera1.division(num4, num5);
        }
        else if (alapotenciaxState == true) {
            result = opera1.alapotenciax(num1, num2);
            result3 = new BigDecimal(result);
        }
        else if (alaraizxState == true) {
            result = opera1.alaraizx(num1, num2);
            result3 = new BigDecimal(result);
        }

        sumaState = false;
        restaState = false;
        multiplicacionState = false;
        divisionState = false;
        alaraizxState = false;
        alapotenciaxState = false;

        resultadoFinal = result3.toString();
        contenidoCuentas.setText("");
        agregarContenidoAPantalla(resultadoFinal);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaCalculadora.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaCalculadora.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaCalculadora.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaCalculadora.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaCalculadora().setVisible(true);
                try {
                    // Creación de la referencia remota, a traves de la clase Naming
                    // buscando si existe un servicio remoto por medio de la url
                    // que se registra en el servidor
                    // Referencia hacia las operaciones del servicio1
                    VentanaCalculadora vc = new VentanaCalculadora();
                    vc.inicializarInstancias();

                } catch (MalformedURLException mue) {
                    System.out.println("Url mal formada: " + mue.getMessage());
                } catch (RemoteException re) {
                    System.out.println("Red no disponible: " + re.getMessage());
                } catch (NotBoundException nbe) {
                    System.out.println("Servicio no disponible: " + nbe.getMessage());
                } catch (IllegalArgumentException iae) {
                    System.out.println("El puerto de conexión es inválido: " + iae.getMessage());
                } catch (ArithmeticException ae) {
                    System.out.println("Error en alguna operacion: " + ae.getMessage());
                } catch (InputMismatchException ime) {
                    System.out.println("Por favor, ingrese un número, no se permiten carácteres especiales ni letras");
                }
            }
        });
    }
    // Variables declaration - do not modify
    private javax.swing.JButton alExponenteX;
    private javax.swing.JButton borrarTodo;
    private javax.swing.JButton borrarUnDigito;
    private javax.swing.JButton cero;
    private javax.swing.JButton cinco;
    private javax.swing.JTextField contenidoCuentas;
    private javax.swing.JButton cosecante;
    private javax.swing.JButton coseno;
    private javax.swing.JButton cotangente;
    private javax.swing.JButton cuatro;
    private javax.swing.JButton diezAlaX;
    private javax.swing.JButton division;
    private javax.swing.JButton dos;
    private javax.swing.JButton dosAlaX;
    private javax.swing.JButton euler;
    private javax.swing.JButton eulerAlaX;
    private javax.swing.JButton factorial;
    private javax.swing.JPanel fondo;
    private javax.swing.JButton logaritmoBase10;
    private javax.swing.JButton logaritmoNatural;
    private javax.swing.JButton multiplicacion;
    private javax.swing.JButton negativoPositivo;
    private javax.swing.JButton nueve;
    private javax.swing.JButton ocho;
    private javax.swing.JButton pi;
    private javax.swing.JButton punto;
    private javax.swing.JButton raizCuadrada;
    private javax.swing.JButton raizCubica;
    private javax.swing.JButton raizN;
    private javax.swing.JButton resta;
    private javax.swing.JButton resultado;
    private javax.swing.JButton secante;
    private javax.swing.JButton seis;
    private javax.swing.JButton seno;
    private javax.swing.JButton siete;
    private javax.swing.JButton suma;
    private javax.swing.JButton tangente;
    private javax.swing.JComboBox<String> tipoDato;
    private javax.swing.JButton tres;
    private javax.swing.JButton uno;
    private javax.swing.JButton unoSobreX;
    private javax.swing.JButton valorAbsoluto;
    private javax.swing.JButton xAlCuadrado;
    private javax.swing.JButton xAlCubo;
    private javax.swing.JButton refresh;
    // End of variables declaration
    private void inicializarInstancias() throws MalformedURLException, RemoteException, NotBoundException{
        url1 = "rmi://192.168.4.3/Operaciones";
        opera1 = (IOperacion) Naming.lookup(url1);
        // Referencia hacia las operaciones del servicio2
        url2 = "rmi://localhost/OperaCientifica";
        // String url2 = "rmi://192.168.4.4/OperaCientifica";
        opera2 = (IOpeCientifica) Naming.lookup(url2);
    }

    // metodo solo usado por numeros
    private void agregarContenidoAPantalla(String digito) {
        String textoActual = contenidoCuentas.getText();
        String numero = digito;
        String agregarNumero = textoActual + numero;
        // Agregar texto al JTextField
        contenidoCuentas.setText(agregarNumero);
    }

    // metodo usado por operaciones con un solo numero
    private double datoIntroducido() {
        String contenido = contenidoCuentas.getText();
        return Double.parseDouble(contenido);
    }

    private BigDecimal datoIntroducidoGrande() {
        String contenido = contenidoCuentas.getText();
        return contenidoGrande = new BigDecimal(contenido);
    }

    // Metodo para funciones trigonometricas
    private double datoGradRadDeg() {
        String datos = (String) tipoDato.getSelectedItem();

        if (datos == "DEG") {
            contenido = (Math.PI / 180) * (Double.parseDouble(contenidoCuentas.getText()));
        } else if (datos == "GRAD") {
            contenido = (Math.PI / 200) * (Double.parseDouble(contenidoCuentas.getText()));
        } else {
            contenido = Double.parseDouble(contenidoCuentas.getText());
        }
        return contenido;
    }

    public String datoMostrado(double numeroAConvertir){
        String numeroFormateado = Double.toString(numeroAConvertir);
        return numeroFormateado;
    }
    // public String datoMostrado(double contenido) {
    //     // Formatear los enteros con el formato "en UK"
    //     Locale locale = new Locale("en", "UK");
    //     NumberFormat nf = NumberFormat.getInstance(locale);

    //     // Formatear los decimales con un máximo de 10 posiciones
    //     DecimalFormat df = new DecimalFormat("#.0000000000");

    //     // Separar la parte entera y la parte decimal del número
    //     String numeroFormateado = df.format(contenido);
    //     String[] partes = numeroFormateado.split("\\.");

    //     // Formatear la parte entera usando "en UK"
    //     String parteEnteraFormateada = nf.format(Long.parseLong(partes[0]));

    //     // Combinar la parte entera y la parte decimal formateadas
    //     if (partes.length > 1) {
    //         return parteEnteraFormateada + "." + partes[1];
    //     } else {
    //         return parteEnteraFormateada;
    //     }
    // }

}

// Información ocupada:
// Formulas mateticas
// https://www.aprendeaprogramar.com/cursos/verApartado.php?id=5008
// https://masqueprogramar.wordpress.com/2018/05/08/funciones-trigonometricas-java/caracteres unicode
// https://symbl.cc/es/unicode/table/
// https://codesitio.com/recursos-utiles-para-tu-web-o-blog/cursos/curso-de-java-como-presentar-numeros-con-formato/